df <- read.excel("vehicles.xlsx", row.names = 1)
df
install.packages("readxl")
library(readxl)
df <- read_excel("vehicles.xlsx", row.names = 1)
df <- read_excel("vehicles.xlsx")
df
# Removing missing values
df <- na.omit(df)
df
# Scale data
data_scaled <- scale(data)
# Scale data
df_scaled <- scale(df)
# Scale data
df_scaled <- scale(as.numeric(df))
# Loading the dataset
df <- read_excel("vehicles.xlsx")
df
# Removing missing values
df <- na.omit(df)
df
# Scale data
df_scaled <- scale(as.numeric(df))
df <- read.csv("vehiclescsv.csv")
df
# Removing missing values
df <- na.omit(df)
df
# Scale data
df_scaled <- scale(as.numeric(df))
# Loading the dataset
df <- read_excel("vehicles.xlsx", col_types = "numeric")
df
# Removing missing values
df <- na.omit(df)
df
# Scale data
df_scaled <- scale(as.numeric(df))
df
df
# Loading the dataset
df <- read_excel("vehicles.xlsx", col_types = "numeric")
warnings()
# Loading the dataset
df <- read_excel("vehicles.xlsx",col_types = c("numeric", "numeric", "numeric", "numeric", "numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","text"))
df
# Removing missing values
df <- na.omit(df)
df
# Scale data
df_scaled <- scale(as.numeric(df))
# Scale data
df_scaled <- scale(df)
# Loading the dataset
df <- read.csv("vehicles.xlsx")
_excel
# Loading the dataset
df <- read_excel("vehicles.xlsx")
df
# Removing missing values
df <- na.omit(df)
df
# Scale data
df_scaled <- scale(df)
# Select only the first 18 attributes for clustering
data <- data[, 1:18]
# Select only the first 18 attributes for clustering
df <- df[, 1:18]
df
# Removing missing values
df <- na.omit(df)
df
# Scale data
df_scaled <- scale(df)
df
# Detecting outliers using Mahalanobis distance
outliers <- mahalanobis_outliers(df_scaled)
outliers
library(dplyr)
library(outliers)
install.packages("outliers")
install.packages("cluster")
install.packages("factoextra")
library(dplyr)
library(outliers)
library(cluster)
library(factoextra)
# Detecting outliers using Mahalanobis distance
outliers <- mahalanobis_outliers(df_scaled)
mahalanobis_outliers <- function(data) {
cov_matrix <- cov(data)
inv_cov_matrix <- solve(cov_matrix)
mahalanobis_dist <- mahalanobis(data, colMeans(data), inv_cov_matrix)
cutoff <- quantile(mahalanobis_dist, 0.95)
outliers <- which(mahalanobis_dist > cutoff)
return(outliers)
}
# Detecting outliers using Mahalanobis distance
outliers <- mahalanobis_outliers(df_scaled)
outliers
# Removing outliers from the dataset
df_no_outliers <- data[-outliers, ]
# Removing outliers from the dataset
df_no_outliers <- df[-outliers, ]
scaled_df_no_outliers <- scaled_df[-outliers, ]
scaled_df_no_outliers <- df_scaled[-outliers, ]
scaled_df_no_outliers
# Automated tools for determining number of cluster centers
# NBclust
nbclust_result <- NbClust(scaled_data, diss = NULL, distance = "euclidean", min.nc = 2, max.nc = 10, method = "kmeans")
library(cluster)
library(factoextra)
# Automated tools for determining number of cluster centers
# NBclust
nbclust_result <- NbClust(scaled_data, diss = NULL, distance = "euclidean", min.nc = 2, max.nc = 10, method = "kmeans")
install.packages("NbClust")
library(NbClust)
# Automated tools for determining number of cluster centers
# NBclust
nbclust_result <- NbClust(scaled_data, diss = NULL, distance = "euclidean", min.nc = 2, max.nc = 10, method = "kmeans")
# Automated tools for determining number of cluster centers
# NBclust
nbclust_result <- NbClust(scaled_df_no_outliers, diss = NULL, distance = "euclidean", min.nc = 2, max.nc = 10, method = "kmeans")
nbclust_clusters <- nbclust_result$Best.nc[1]
nbclust_clusters
print(nbclust_clusters)
